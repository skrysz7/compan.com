name: Final

on:
  workflow_dispatch: {}
  
env:
  TF_CLOUD_ORGANIZATION: "compan"
  TF_API_TOKEN: "${{ secrets.TFE_TOKEN }}"
  TF_WORKSPACE: "compan-workspace"
  CONFIG_DIRECTORY: "./"
  
jobs:
  create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout pre-release branch
        uses: actions/checkout@v3
        with:
          ref: pre-release

      - name: Fetch main branch
        run: git fetch origin main

      - name: Check for differences
        run: |
          if git diff --exit-code origin/main; then
            echo "No changes detected"
            exit 0
          else
            echo "Changes detected"
          fi

      - name: Create pull request
        run: gh pr create -B main -H pre-release --title 'Merge pre-release into main' --body 'Created by Github action'
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Wait 20 seconds
        run: sleep 20

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: plan-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true

      - name: Get Plan Output
        id: plan-output
        run: |
          PLAN_ID=$(curl -s \
            --header "Authorization: Bearer ${{ secrets.TFE_TOKEN }}" \
            https://app.terraform.io/api/v2/runs/${{ steps.plan-run.outputs.run_id }} | jq -r '.data.relationships.plan.data.id')
          PLAN_OUTPUT=$(curl -s \
            --header "Authorization: Bearer ${{ secrets.TFE_TOKEN }}" \
            https://app.terraform.io/api/v2/plans/${PLAN_ID} | jq -r '.data.attributes.json')
          echo "Plan Output: $PLAN_OUTPUT"
          echo "::set-output name=plan_output::${PLAN_OUTPUT}"

      - name: Print Plan Changes
        run: |
          echo "The planned changes are:"
          echo "${{ steps.plan-output.outputs.plan_output }}"

      - name: Merge pull request
        run: gh pr merge --merge --auto --subject 'Merge pre-release into main' --body 'Auto-merged by GitHub Action'
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  approval:
    needs: create_pr
    runs-on: ubuntu-latest
    environment: apply
    steps:
      - name: Await manual approval
        run: |
          echo "Please approve the build to continue."
          echo "This step is waiting for manual approval..."
        timeout-minutes: 60
