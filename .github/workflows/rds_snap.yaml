name: Take RDS DB Snapshot

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  take-snapshot:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set Snapshot Identifier
        id: set_snapshot_identifier
        run: |
          snapshot_identifier="${{ secrets.SNAPSHOT_ID }}-snapshot-$(date +'%Y-%m-%d-%H-%M-%S')"
          echo "::set-output name=snapshot_identifier::$snapshot_identifier"

      - name: Take RDS DB Snapshot
        run: |
          aws rds create-db-snapshot --db-instance-identifier ${{ secrets.SNAPSHOT_ID }} --db-snapshot-identifier ${{ steps.set_snapshot_identifier.outputs.snapshot_identifier }}

      - name: Wait for Snapshot to Complete
        run: |
          while true; do
            status=$(aws rds describe-db-snapshots --db-snapshot-identifier ${{ steps.set_snapshot_identifier.outputs.snapshot_identifier }} --query 'DBSnapshots[0].Status' --output text)
            if [ "$status" = "available" ]; then
              echo "Snapshot completed successfully."
              break
            else
              echo "Snapshot is still in progress. Waiting..."
              sleep 30  # Adjust the sleep time as needed
            fi
          done

      - name: Store Snapshot Identifier in SSM
        run: |
          aws ssm put-parameter --name "/rds/snapshot/name" --value ${{ steps.set_snapshot_identifier.outputs.snapshot_identifier }} --type String --overwrite
