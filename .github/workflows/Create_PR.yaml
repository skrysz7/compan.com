name: Create PR from pre-release to main

on:
  workflow_dispatch: {}
  workflow_run:
    workflows: ["Take RDS DB Snapshot"]
    types:
      - completed

jobs:
  create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout pre-release branch
        uses: actions/checkout@v3
        with:
          ref: pre-release

      - name: Fetch main branch
        run: git fetch origin main

      - name: Check for differences
        run: |
          if git diff --exit-code origin/main; then
            echo "No changes detected"
            exit 0
          else
            echo "Changes detected"
          fi

      - name: create pull request
        run: gh pr create -B main -H pre-release --title 'Merge pre-release into main' --body 'Created by Github action'
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Wait 20 seconds
        run: sleep 20

      - name: Merge pull request
        run: gh pr merge --merge --auto --subject 'Merge pre-release into main' --body 'Auto-merged by GitHub Action'
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  approval:
    needs: create_pr
    runs-on: ubuntu-latest
    environment: apply
    steps:
      - name: Await manual approval
        run: |
          echo "Please approve the build to continue."
          echo "This step is waiting for manual approval..."
        timeout-minutes: 60

  ecs:
    needs: approval
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: "eu-central-1"

      - name: Download task definition
        id: task-def
        run: |
          aws ecs describe-task-definition --task-definition hello_world --query taskDefinition > hello_world.json

      - name: Deploy Amazon ECS task definition
        id: deploy
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: hello_world.json
          service: hello_world_service
          cluster: my-cluster
          wait-for-service-stability: true
