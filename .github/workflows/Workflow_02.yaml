name: Create PR from pre-release to main

on:
  workflow_dispatch: {}
  workflow_run:
    workflows: ["Take RDS DB Snapshot"]
    types:
      - completed

jobs:
  create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout pre-release branch
        uses: actions/checkout@v3
        with:
          ref: pre-release

      - name: Fetch main branch
        run: git fetch origin main

      - name: Check for differences
        run: |
          if git diff --exit-code origin/main; then
            echo "No changes detected"
            exit 0
          else
            echo "Changes detected"
          fi

      - name: create pull request
        run: gh pr create -B main -H pre-release --title 'Merge pre-release into main' --body 'Created by Github action'
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Wait 20 seconds
        run: sleep 20

      - name: Merge pull request
        run: gh pr merge --merge --auto --subject 'Merge pre-release into main' --body 'Auto-merged by GitHub Action'
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Check Terraform plan
        id: check_plan
        run: |
          workspace_id="${{ secrets.TFC_WORKSPACE }}"
          tfe_token="${{ secrets.TFE_TOKEN }}"
          
          plan_output=$(curl -s \
            --header "Authorization: Bearer $tfe_token" \
            https://app.terraform.io/api/v2/runs?filter[workspace][id]=$workspace_id | jq -r '.data[0].attributes."status"')

          # Check the plan output for no changes
          if [[ "$plan_output" == "planned_and_finished" ]]; then
            echo "Terraform plan has no changes."
            echo "::set-output name=skip_apply::true"
          else
            echo "Terraform plan has changes."
            echo "::set-output name=skip_apply::false"
          fi

      - name: Wait for Terraform apply to complete
        if: steps.check_plan.outputs.skip_apply == 'false'
        id: wait_for_terraform
        run: |
          workspace_id="${{ secrets.TFC_WORKSPACE }}"
          tfe_token="${{ secrets.TFE_TOKEN }}"
          
          while true; do
            run_status=$(curl -s \
              --header "Authorization: Bearer $tfe_token" \
              https://app.terraform.io/api/v2/runs?filter[workspace][id]=$workspace_id | jq -r '.data[0].attributes."status"')
            
            if [ "$run_status" == "applied" ]; then
              echo "Terraform apply completed."
              break
            elif [ "$run_status" == "errored" ]; then
              echo "Terraform apply failed."
              exit 1
            else
              echo "Waiting for Terraform apply to complete..."
              sleep 30
            fi
          done
