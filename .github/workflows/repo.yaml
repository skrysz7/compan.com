name: Build and Deploy to Amazon ECR

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
      
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Copy RPM file from S3 to /tmp
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_SHARED_BUCKET: ${{ secrets.S3_SHARED_BUCKET }}
          RPM_FILE: ${{ secrets.RPM_FILE }}
        run: |
          aws s3 cp s3://$S3_SHARED_BUCKET/rpm/$RPM_FILE /tmp/$RPM_FILE --region eu-north-1

      - name: Get repository version from ECR
        id: repo_version
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          REPO_VERSION=$(aws ecr describe-images --repository-name nexus --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' --output text)
          echo "::set-output name=repo_version::$REPO_VERSION"
          echo $REPO_VERSION

      - name: Get latest version from Docker Hub
        id: image_version
        run: |
          IMAGE_VERSION=$(curl -s https://registry.hub.docker.com/v2/repositories/sonatype/nexus3/tags?page_size=10 | jq -r '[.results[] | select(.name != "latest")] | sort_by(.last_updated) | last.name' | awk -F"-" {'print $1'})
          echo "::set-output name=image_version::$IMAGE_VERSION"
          echo $IMAGE_VERSION
      - name: Compare versions and build/push if necessary
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          REPO_VERSION: ${{ steps.repo_version.outputs.repo_version }}
          IMAGE_VERSION: ${{ steps.image_version.outputs.image_version }}
          RPM_FILE: ${{ secrets.RPM_FILE }}
          REPO_NAME: ${{ secrets.REPO_NAME }}
        run: |
          if [ "$REPO_VERSION" == "$IMAGE_VERSION" ]; then
            echo "Current ECR image version is equal to the remote version. Ending the build."
            exit 0
          else
            echo -e "FROM sonatype/nexus3:$IMAGE_VERSION\n" > Dockerfile
            echo -e "COPY $RPM_FILE /$RPM_FILE\n" >> Dockerfile
            echo -e "USER root\n" >> Dockerfile
            echo -e "RUN rpm -ivh /$RPM_FILE\n" >> Dockerfile
            echo -e "USER nexus\n" >> Dockerfile
            docker build . -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$IMAGE_VERSION
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$IMAGE_VERSION
          fi
